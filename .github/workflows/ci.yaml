name: ci

on:
  push:
    paths:
      - "vellum/pyproject.toml"
      - "package.json"
      - "browser/**"
      - "worker/**"
      - "run_agent.sh"
      - "knip.json"
  pull_request:
    paths:
      - "vellum/pyproject.toml"
      - "browser/**"
      - "worker/**"
      - "scripts/**"
      - "app/**"
      - "components/**"
      - "db/**"
      - "tests/**"
      - "eslint.config.mjs"
      - "package.json"
      - "knip.json"
      - ".github/workflows/ci.yaml"
      - "run_agent.sh"
  workflow_dispatch:
    inputs:
      agent_name:
        description: "Agent name to create (e.g., vargas-jr for production)"
        required: false
        type: string

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Generate cache key
        id: cache-key
        run: npx tsx scripts/preinstall.ts
      - name: Cache dependencies and browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache/ms-playwright
          key: ${{ steps.cache-key.outputs.cache-key }}
          restore-keys: |
            deps-${{ runner.os }}-
      - name: Install Node.js dependencies
        run: npm install
      - name: Run ESLint
        run: npm run lint
      - name: Run Prettier check
        run: npm run format:check
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Generate cache key
        id: cache-key
        run: npx tsx scripts/preinstall.ts
      - name: Cache dependencies and browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache/ms-playwright
          key: ${{ steps.cache-key.outputs.cache-key }}
          restore-keys: |
            deps-${{ runner.os }}-
      - name: Install Node.js dependencies
        run: npm install
      - name: Run tests
        run: npm test tests/
  publish-agent:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Generate cache key
        id: cache-key
        run: npx tsx scripts/preinstall.ts
      - name: Cache dependencies and browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache/ms-playwright
          key: ${{ steps.cache-key.outputs.cache-key }}
          restore-keys: |
            deps-${{ runner.os }}-
      - name: Install Node.js dependencies
        run: npm install
      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Build agent services
        run: npm run agent:build
      - name: Create complete agent package
        run: npm run agent:publish
      - name: Publish package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event_name == 'pull_request' && format('dist-pr-{0}', github.event.number) || 'dist' }}
          path: vargasjr_dev_agent-${{ steps.get_version.outputs.version }}.tar.gz
          retention-days: 5
      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: vargasjr_dev_agent-${{ steps.get_version.outputs.version }}.tar.gz
          tag_name: v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

  create-preview-agent:
    needs: [lint, test, publish-agent]
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/create-agent.yaml
    with:
      agent_name: pr-${{ github.event.number }}
    secrets: inherit
