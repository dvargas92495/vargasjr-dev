name: ci

on:
  push:
    paths:
      - 'agent/pyproject.toml'
  pull_request:
    types: [opened, synchronize, closed]
  workflow_dispatch:

jobs:
  test-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Bootstrap poetry
        run: curl -sSL https://install.python-poetry.org | python - -y --version 1.8.3
      - name: Install dependencies
        run: poetry install
        working-directory: agent
      - name: Test
        run: poetry run pytest -rP .
        working-directory: agent
        env:
          VELLUM_API_KEY: ${{ secrets.VELLUM_API_KEY }}
  publish-agent:
    runs-on: ubuntu-latest
    needs: test-agent
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Bootstrap poetry
        run: curl -sSL https://install.python-poetry.org | python - -y --version 1.8.3
      - name: Install dependencies
        run: poetry install
        working-directory: agent
      - name: Build package
        run: poetry build
        working-directory: agent
      - name: Publish package
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: agent/dist/*
          retention-days: 5
      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(sed -n '3p' agent/pyproject.toml | cut -d'"' -f2)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: agent/dist/*
          tag_name: v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
  create-preview-agent:
    runs-on: ubuntu-latest
    needs: test-agent
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Create preview agent
        run: npm run create-agent -- --pr ${{ github.event.number }}
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          VELLUM_API_KEY: ${{ secrets.VELLUM_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  cleanup-preview-agent:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Cleanup preview agent
        run: npm run cleanup-agent -- --pr ${{ github.event.number }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
