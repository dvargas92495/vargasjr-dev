name: Push Vellum Workflows

on:
  push:
    branches:
      - main
    paths:
      - "vellum/**"
      - "!vellum/evals/**"
      - ".github/workflows/push-vellum-workflows.yaml"
      - "scripts/push-vellum-workflows.ts"
  pull_request:
    paths:
      - "vellum/**"
      - "!vellum/evals/**"
      - ".github/workflows/push-vellum-workflows.yaml"
      - "scripts/push-vellum-workflows.ts"
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

permissions:
  contents: write
  pull-requests: write

jobs:
  preview-workflows:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      GITHUB_PRIVATE_KEY: ${{ secrets.VARGASJR_GITHUB_PRIVATE_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install Node.js dependencies
        run: npm install

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Bootstrap poetry
        run: curl -sSL https://install.python-poetry.org | python - -y --version 1.8.3

      - name: Install dependencies
        run: poetry install
        working-directory: vellum

      - name: Log Vellum API Key (first 4 characters)
        run: |
          if [ -n "${{ secrets.VELLUM_API_KEY }}" ]; then
            echo "Vellum API Key (first 4 chars): ${VELLUM_API_KEY:0:4}****"
          else
            echo "Warning: VELLUM_API_KEY is not set"
          fi
        env:
          VELLUM_API_KEY: ${{ secrets.VELLUM_API_KEY }}

      - name: Ping Vellum API
        run: |
          echo "Pinging Vellum API..."
          poetry run python -c "
          from vellum import VellumClient
          import os
          import sys
          
          api_key = os.environ.get('VELLUM_API_KEY')
          if not api_key:
              print('Error: VELLUM_API_KEY not set')
              sys.exit(1)
          
          try:
              client = VellumClient(api_key=api_key)
              response = client.workflow_deployments.list()
              print(f'✅ Vellum API ping successful!')
              print(f'Found {len(response.results)} workflow deployments')
          except Exception as e:
              print(f'❌ Vellum API ping failed: {e}')
              sys.exit(1)
          "
        working-directory: vellum
        env:
          VELLUM_API_KEY: ${{ secrets.VELLUM_API_KEY }}

      - name: Run mypy type checking
        run: poetry run mypy .
        working-directory: vellum

      - name: Preview workflows
        run: npm run push-vellum-workflows
  push-workflows:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      GITHUB_PRIVATE_KEY: ${{ secrets.VARGASJR_GITHUB_PRIVATE_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install Node.js dependencies
        run: npm install

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Bootstrap poetry
        run: curl -sSL https://install.python-poetry.org | python - -y --version 1.8.3

      - name: Install dependencies
        run: poetry install
        working-directory: vellum

      - name: Log Vellum API Key (first 4 characters)
        run: |
          if [ -n "${{ secrets.VELLUM_API_KEY }}" ]; then
            echo "Vellum API Key (first 4 chars): ${VELLUM_API_KEY:0:4}****"
          else
            echo "Warning: VELLUM_API_KEY is not set"
          fi
        env:
          VELLUM_API_KEY: ${{ secrets.VELLUM_API_KEY }}

      - name: Ping Vellum API
        run: |
          echo "Pinging Vellum API..."
          poetry run python -c "
          from vellum import VellumClient
          import os
          import sys
          
          api_key = os.environ.get('VELLUM_API_KEY')
          if not api_key:
              print('Error: VELLUM_API_KEY not set')
              sys.exit(1)
          
          try:
              client = VellumClient(api_key=api_key)
              response = client.workflow_deployments.list()
              print(f'✅ Vellum API ping successful!')
              print(f'Found {len(response.results)} workflow deployments')
          except Exception as e:
              print(f'❌ Vellum API ping failed: {e}')
              sys.exit(1)
          "
        working-directory: vellum
        env:
          VELLUM_API_KEY: ${{ secrets.VELLUM_API_KEY }}

      - name: Run mypy type checking
        run: poetry run mypy .
        working-directory: vellum

      - name: Push workflows to Vellum
        run: npm run push-vellum-workflows
