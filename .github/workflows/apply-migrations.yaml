name: Apply Database Migrations

on:
  push:
    branches: [main]
    paths:
      - 'db/schema.ts'
      - 'scripts/run-migrations.ts'
      - '.github/workflows/apply-migrations.yaml'
  pull_request:
    paths:
      - 'db/schema.ts'
      - 'scripts/run-migrations.ts'
      - '.github/workflows/apply-migrations.yaml'

permissions:
  contents: read
  pull-requests: write

jobs:
  preview-migrations:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          
      - name: Install dependencies
        run: npm install
        
      - name: Install Vercel CLI
        run: npm install -g vercel
        
      - name: Pull environment variables from Vercel
        run: |
          vercel env pull .env.vercel --environment=preview --token=${{ secrets.VERCEL_TOKEN }} --yes
          export POSTGRES_URL=$(grep NEON_URL .env.vercel | cut -d '=' -f2)
          echo "POSTGRES_URL=$POSTGRES_URL" >> $GITHUB_ENV
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        
      - name: Run migration preview
        run: npm run run-migrations -- --preview
        env:
          POSTGRES_URL: ${{ env.POSTGRES_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}

  apply-migrations:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          
      - name: Install dependencies
        run: npm install
        
      - name: Install Vercel CLI
        run: npm install -g vercel
        
      - name: Pull environment variables from Vercel
        run: |
          vercel env pull .env.vercel --environment=production --token=${{ secrets.VERCEL_TOKEN }} --yes
          export POSTGRES_URL=$(grep NEON_URL .env.vercel | cut -d '=' -f2)
          echo "POSTGRES_URL=$POSTGRES_URL" >> $GITHUB_ENV
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          
      - name: Generate and apply migrations
        run: npm run db:generate
        env:
          POSTGRES_URL: ${{ env.POSTGRES_URL }}
          
      - name: Apply database migrations
        run: npm run run-migrations
        env:
          POSTGRES_URL: ${{ env.POSTGRES_URL }}
